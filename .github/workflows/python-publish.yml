# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest
    
    strategy:
      max-parallel: 4
      matrix:
        appName: [app-qh-auth, app-qh-hub-tx-transaction, app-qh-hub-tx-attachment, app-qh-hub-tx-deal-deal, app-qh-hub-tx-meta-config, app-qh-hub-repository, app-qh-hub-tx-util, app-qh-hub-util-global-lookup, app-qh-lscr-config-country, app-qh-lscr-config-siebel, app-qh-lscr-config-siebel-mrt, app-qh-lscr-csid, app-qh-lscr-csid-tx, app-qh-lscr-quote, app-qh-lscr-scr, app-qh-lscr-sdm-case, app-qh-lscr-transactions, app-qh-cs-micro-services, app-qh-cs-offering-catalog, app-qh-cs-mrt-engine, app-qh-cs-q2c, app-qh-cs-sync-data, app-qh-cs-sync-file, app-qh-cs-case-data, app-qh-cs-case-file]

    steps:
    - uses: actions/checkout@v3
    - name: Scan the code
      run: |
        echo ${{ matrix.appName }}
